services:
  frontend:
    build:
      context: .
      dockerfile: apps/frontend/Dockerfile
    container_name: bankme-frontend
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=http://backend:3001/integrations
      - API_URL=http://backend:3001/integrations
    depends_on:
      - backend
    networks:
      - bankme-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  backend:
    build:
      context: .
      dockerfile: apps/backend/Dockerfile
    container_name: bankme-backend
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=file:/app/data/database.sqlite
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=b4nkme-jwt-secret
      - ALLOWED_ORIGINS=http://frontend:3000,http://localhost:3000
    volumes:
      - ./data:/app/data
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - bankme-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3001/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  redis:
    image: redis:8-alpine
    container_name: bankme-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - bankme-network
    restart: unless-stopped
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy noeviction
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

volumes:
  redis-data:
    driver: local

networks:
  bankme-network:
    driver: bridge 